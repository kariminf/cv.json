{
    "project": {
        "name": "jsonVCard API",
        "description": "json CV website",
        "version": "0.6.0",
        "url": "https://github.com/kariminf/json-vcard"
    },
    "files": {
        "docs/docs/assets/vendor/bootstrap/js/bootstrap.min.js": {
            "name": "docs/docs/assets/vendor/bootstrap/js/bootstrap.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "json-vcard/jsonvcard.js": {
            "name": "json-vcard/jsonvcard.js",
            "modules": {
                "jsonvcard": 1
            },
            "classes": {
                "JsonVCard": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "jsonvcard": {
            "name": "jsonvcard",
            "submodules": {},
            "elements": {},
            "classes": {
                "JsonVCard": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "json-vcard/jsonvcard.js",
            "line": 34,
            "description": "Provides the scripts to generate a CV"
        }
    },
    "classes": {
        "JsonVCard": {
            "name": "JsonVCard",
            "shortname": "JsonVCard",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jsonvcard",
            "namespace": "",
            "file": "json-vcard/jsonvcard.js",
            "line": 34,
            "description": "This class doesn't do anything, it is here just to force YuiDoc\ngenerating the documentation",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "docs/docs/assets/vendor/bootstrap/js/bootstrap.min.js",
            "line": 1,
            "description": "Bootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "class": "JsonVCard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 71,
            "description": "specifies the themes path, in case the themes are not beside the html file",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "setThemesPath",
            "params": [
                {
                    "name": "path",
                    "description": "the path",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 85,
            "description": "Specifies the relative path of the files called in json file",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "setRelativePath",
            "params": [
                {
                    "name": "path",
                    "description": "the path",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 98,
            "description": "Specifies the theme name",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "setThemeName",
            "params": [
                {
                    "name": "name",
                    "description": "the theme's name",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 110,
            "description": "Specifies the style name (the css)",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "setStyleName",
            "params": [
                {
                    "name": "name",
                    "description": "the style's name",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 122,
            "description": "Sets the url to the footer (which is an html file with one line)",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "url",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 133,
            "description": "Initialization of process; this method searches for \"vcard.json\"\nin the javascript location \"jsonvcard.js\".\nThen when retrieved, it sends its content as a string to process(json)\nWhere it will be processed",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "jsonURL",
                    "description": "The location of json file",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 159,
            "description": "This method parses the json content",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "processJSON",
            "params": [
                {
                    "name": "json",
                    "description": "The content of JSON file",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 189,
            "description": "This function is used to initiate the process of binding the\ndata with the template",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "cookTemplate",
            "params": [
                {
                    "name": "data",
                    "description": "the data structure recovered from json file",
                    "type": "Object"
                },
                {
                    "name": "template",
                    "description": "the HTML template used to create the final HTML code",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 207,
            "description": "Save all template defined variables in a global variable called vars",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "getVariables",
            "params": [
                {
                    "name": "template",
                    "description": "the HTML template used to create the final HTML code",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML template after deliting variables",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 239,
            "description": "Get all the function defined in the template",
            "itemtype": "method",
            "name": "getFunctions",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "template",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 288,
            "description": "Process a theme element (json) which has a name and a style",
            "itemtype": "method",
            "name": "processTheme",
            "access": "private",
            "tagname": "",
            "static": 1,
            "return": {
                "description": "path to the template constructed from the theme name, or\nthe dafault one",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 304,
            "description": "Link a stylsheet to the current document",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "addStyleSheet",
            "params": [
                {
                    "name": "url",
                    "description": "the URL of the tageted CSS",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 334,
            "description": "Process an object which contains many elements in it",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "processObject",
            "params": [
                {
                    "name": "key",
                    "description": "the name of this object, for example\n<pre>\n  \"perso\": {\n     \"name\": \"Karim\",\n     \"family\": \"Aries\"\n  }\n</pre>\n\"perso\" is the key, and the object is the data",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "the object to be processed",
                    "type": "Object"
                },
                {
                    "name": "template",
                    "description": "the HTML templated used to push the data",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after merging with the data",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 362,
            "description": "Process the data of an object. It detects if the data is\nan object, a list of elements or a simple element",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "processData",
            "params": [
                {
                    "name": "key",
                    "description": "the name or key of the element; for example \"perso.name\"",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value of the data: it may be an object, a list, or a simple element.\nIn our example, it is a simple string: \"Karim\"",
                    "type": "Object"
                },
                {
                    "name": "template",
                    "description": "the HTML template used to push the data",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after merging with the data",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 449,
            "description": "Process the data of an array.\nIt recovers the begining and ending of this array in the template.\nThen, it pushes each element of the array into that area.",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "processArray",
            "params": [
                {
                    "name": "key",
                    "description": "the name or key of the array; for example \"skill\"",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "the value of the data: it may be an object, a list, or a simple element.\nIn our example, it is a simple string: \"javascript\"",
                    "type": "Object"
                },
                {
                    "name": "template",
                    "description": "the HTML template used to push the data",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after merging with the data",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 503,
            "description": "Process the files stored in a global variable (files) while processing\nthe json data and the template",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "processFiles",
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 518,
            "description": "Read a file and push the content into its reserved area in the template.\nHere, the content is pushed into a global variable containing the template.\nWe can't use the template as an argument, nor return the merged html, because\nthe files call is asynchronious. <br>\nA mutex is used so the html code is pushed into the browser once all the\nfiles are being processed",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "readFile",
            "params": [
                {
                    "name": "marker",
                    "description": "the marker which defines where in the template the content\nshould be pushed",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL where to find the file",
                    "type": "String"
                }
            ],
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 562,
            "description": "Resolves the url; if it is relative it adds the prefix specified by\nJsonVCard.setRelativePath",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "the url",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the url after processing",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 584,
            "description": "Special function (social) to process social media links.\nYou can define a function in template.htm like this:",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "process_social",
            "params": [
                {
                    "name": "data",
                    "description": "an object containing the name of the social network as a key and\nthe link as a value",
                    "type": "Object"
                },
                {
                    "name": "template",
                    "description": "the HTML template to be replaced",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after replacement",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 606,
            "description": "Special function (date) to process dates.\nYou can define a function in template.htm like this:",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "process_date",
            "params": [
                {
                    "name": "date",
                    "description": "the date in the format \"yyyymmdd\", \"yyyymm\" or \"yyyy\"",
                    "type": "String"
                },
                {
                    "name": "template",
                    "description": "the HTML template to be replaced",
                    "type": "String"
                },
                {
                    "name": "marker",
                    "description": "the marker which will be replaced in the template",
                    "type": "String"
                },
                {
                    "name": "pattern",
                    "description": "the pattern using the words \"yyyy\", \"yy\", \"mm\", \"dd\".\nThe pattern uses also \"<...>\" which specifies the content which will be erased if there\nis no days and \"[]\" which specifies the content related to month\n    \"mm[ dd<, >]yyyy\"",
                    "type": "String"
                },
                {
                    "name": "months",
                    "description": "array of 12 strings containing months names.\nIf this is given, the \"mm\" will be replaced with the equivalent month name in the array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "the HTML content after replacement",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 673,
            "description": "Special function (mark) to process percentages.\nYou can define a function in template.htm like this:",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "process_mark",
            "params": [
                {
                    "name": "value",
                    "description": "a number from 1 to 10",
                    "type": "String"
                },
                {
                    "name": "template",
                    "description": "the HTML template to be replaced",
                    "type": "String"
                },
                {
                    "name": "marker",
                    "description": "the marker which will be replaced in the template",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "the type of the theme, currently: \"bar\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after replacement",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        },
        {
            "file": "json-vcard/jsonvcard.js",
            "line": 699,
            "description": "[process_relative description]",
            "params": [
                {
                    "name": "value",
                    "description": "the url to be processed",
                    "type": "String"
                },
                {
                    "name": "template",
                    "description": "the HTML template to be replaced",
                    "type": "String"
                },
                {
                    "name": "marker",
                    "description": "the marker which will be replaced in the template",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the HTML content after replacement",
                "type": "String"
            },
            "class": "JsonVCard",
            "module": "jsonvcard"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nBootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "line": " docs/docs/assets/vendor/bootstrap/js/bootstrap.min.js:1"
        },
        {
            "message": "Missing item type\nSets the url to the footer (which is an html file with one line)",
            "line": " json-vcard/jsonvcard.js:122"
        },
        {
            "message": "Missing item type\nResolves the url; if it is relative it adds the prefix specified by\nJsonVCard.setRelativePath",
            "line": " json-vcard/jsonvcard.js:562"
        },
        {
            "message": "Missing item type\n[process_relative description]",
            "line": " json-vcard/jsonvcard.js:699"
        }
    ]
}